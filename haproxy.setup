--- setup commands

sudo apt-get update
sudo apt-get dist-upgrade
sudo apt-get install haproxy
sudo vi /etc/haproxy/haproxy.cfg
sudo apt-get install -y certbot
sudo systemctl restart haproxy
sudo certbot certonly --standalone -d ec2-18-195-63-182.eu-central-1.compute.amazonaws.com  --non-interactive --agree-tos -m hellmar.becker@imply.io --http-01-port=8888
sudo certbot certonly --standalone -d srproxy.hellmar-becker.de  --non-interactive --agree-tos -m hellmar.becker@imply.io --http-01-port=8888
sudo mkdir -p /etc/ssl/srproxy.hellmar-becker.de
sudo su -
  cat /etc/letsencrypt/live/srproxy.hellmar-becker.de/fullchain.pem /etc/letsencrypt/live/srproxy.hellmar-becker.de/privkey.pem | tee /etc/ssl/srproxy.hellmar-becker.de/srproxy.hellmar-becker.de.pem


--- create auth secret

echo -n "<API_KEY>:<SECRET>" | base64

--- haproxy.cfg

global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend www-https
    bind *:80
    bind *:443 ssl crt /etc/ssl/srproxy.hellmar-becker.de/srproxy.hellmar-becker.de.pem

    # Redirect HTTP to  HTTPS
    redirect scheme https code 301 if !{ ssl_fc }

    #Lets Encrypt Renewal URI Test
    acl letsencrypt-acl path_beg /.well-known/acme-challenge/
    use_backend letsencrypt-backend if letsencrypt-acl

    mode http

    #Backend to use if no URL specified
    default_backend sr01


backend sr01
    server server1 psrc-do01d.eu-central-1.aws.confluent.cloud:443 check ssl verify none
    http-request add-header Authorization Basic\ <BASE64-AUTH>

